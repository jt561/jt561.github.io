{"version":3,"sources":["components/Todo.js","components/TodoList.js","components/AddTodoForm.js","components/ProgressBar.js","App.js","index.js"],"names":["Todo","globalFunctions","todoDetails","id","name","description","startDate","endDate","completed","editMode","viewState","startDateEl","useRef","endDateEl","todaysDate","Date","toISOString","split","startMinDate","endMinDate","idSectionLength","length","stringExp","RegExp","idSections","match","handleModify","obj","elType","app","handleModifyTodo","className","htmlFor","type","value","readOnly","onChange","e","target","BsArrow90DegDown","ref","min","max","chosenMaxDate","BsArrowReturnRight","onClick","handleToggleTodo","title","CgRadioCheck","FiCheckCircle","handleToggleEditTodo","GrEdit","AiOutlineSave","TodoList","todosArr","component","componentClassName","todosHTMLItems","map","todoObj","transitionName","transitionEnter","transitionLeave","transitionEnterTimeout","transitionLeaveTimeout","transitionAppear","transitionAppearTimeout","AddTodoForm","descriptionInputId","useState","nameInput","setNameInput","descriptionInput","setDescriptionInput","startDateInput","setStartDateInput","endDateInput","setEndDateInput","onSubmit","preventDefault","defaultDescriptionInput","defaultStartDateInput","substring","defaultEndDateInput","handleAddTodo","placeholder","required","current","GrAddCircle","ProgressBar","details","width","fill","outerClassName","innerClassName","height","style","display","backgroundColor","position","top","left","transition","LOCAL_STORAGE_KEY_CURRENT","LOCAL_STORAGE_KEY_CLEARED","App","todos","setTodos","clearedTodos","setClearedTodos","a","newTodos","todo","find","handleRefreshTodos","sort","b","localeCompare","toggleClassOnElement","element","classList","contains","remove","add","useEffect","storedTodos","JSON","parse","localStorage","getItem","storedClearedTodos","setItem","stringify","completedInput","editModeInput","viewStateInput","newTodo","uuidv4","newPropsObj","filter","todoToModify","todoToModifyIdx","findIndex","splice","t","document","getElementsByClassName","RiMenuAddFill","BiRefresh","BsToggles","prev","BiArchive","AiOutlineCloseCircle","MdDeleteForever","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.48fb9c4e.chunk.js","sourcesContent":["import { useRef } from 'react';\r\nimport { BsArrow90DegDown } from \"@react-icons/all-files/bs/BsArrow90DegDown\";\r\nimport { BsArrowReturnRight } from \"@react-icons/all-files/bs/BsArrowReturnRight\";\r\nimport { FiCheckCircle } from \"@react-icons/all-files/fi/FiCheckCircle\";\r\nimport { CgRadioCheck } from \"@react-icons/all-files/cg/CgRadioCheck\";\r\nimport { GrEdit } from \"@react-icons/all-files/gr/GrEdit\";\r\nimport { AiOutlineSave } from \"@react-icons/all-files/ai/AiOutlineSave\";\r\n\r\nfunction Todo({ globalFunctions, todoDetails: { id, name, description, startDate, endDate, completed, editMode, viewState } }) {\r\n\r\n    const startDateEl = useRef(\"\");\r\n    const endDateEl = useRef(\"\");\r\n\r\n    const todaysDate = new Date().toISOString().split(\"T\")[0];\r\n    const chosenMaxDate = \"2030-01-01\";\r\n    const startMinDate = todaysDate;\r\n    const startMaxDate = chosenMaxDate;\r\n    const endMinDate = todaysDate;\r\n    const endMaxDate = chosenMaxDate;\r\n\r\n    // splits the id string into 4 sections\r\n    const idSectionLength = id.length / 4; // give length of each string when split into 4 sections\r\n    const stringExp = new RegExp(`.{1,${idSectionLength}}`,\"g\");\r\n    const idSections = id.match(stringExp); // array of size 4\r\n\r\n    const handleCheckboxClick = () => {\r\n        if (!viewState) return; // dont toggle if it is in \"frozen\" mode\r\n        globalFunctions.app.handleToggleTodo(id);\r\n    }\r\n\r\n    const handleEditClick = () => {\r\n        if (!viewState) return;\r\n        globalFunctions.app.handleToggleEditTodo(id);\r\n    }\r\n\r\n    const handleModify = (obj, elType = \"\") => {\r\n        switch (elType) {\r\n            // ensures start date and end date dont overlap in the wrong direction\r\n            case \"startDateEl\":\r\n                if (obj.startDate > endDate) obj = { ...obj, endDate: obj.startDate };\r\n                break;\r\n            case \"endDateEl\":\r\n                if (obj.endDate < startDate) obj = { ...obj, startDate: obj.endDate };\r\n                break;\r\n            default: break;\r\n        }\r\n        globalFunctions.app.handleModifyTodo(id, obj);\r\n    }\r\n\r\n    return (\r\n        <div className={`todo ${editMode ? 'input' : ''} ${viewState ? 'view' : 'not-view'} ${completed ? 'completed' : 'uncompleted'}`} >\r\n            <div className=\"todo-content\">\r\n                <div>\r\n                    <label htmlFor={id+idSections[0]} className=\"no-display-form-label\" >Task name</label>\r\n                    <input id={id+idSections[0]} type=\"text\" value={name} readOnly={!editMode} onChange={(e) => { handleModify({ name: e.target.value }) }} />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor={id+idSections[1]} className=\"no-display-form-label\" >Description</label>\r\n                    <textarea id={id+idSections[1]} type=\"textarea\" value={description} readOnly={!editMode} onChange={(e) => { handleModify({ description: e.target.value }) }} />\r\n                </div>\r\n                <div className=\"startDateContainer\">\r\n                    <label htmlFor={id+idSections[2]} className=\"no-display-form-label\" >Start date</label>\r\n                    <BsArrow90DegDown />\r\n                    <input id={id+idSections[2]} type=\"date\" ref={startDateEl} min={startMinDate} max={startMaxDate} value={startDate} readOnly={!editMode} onChange={(e) => { handleModify({ startDate: e.target.value }, \"startDateEl\") }} />\r\n                </div>\r\n                <div className=\"endDateContainer\">\r\n                    <label htmlFor={id+idSections[3]} className=\"no-display-form-label\" >End date</label>\r\n                    <BsArrowReturnRight />\r\n                    <input id={id+idSections[3]} type=\"date\" ref={endDateEl} min={endMinDate} max={endMaxDate} value={endDate} readOnly={!editMode} onChange={(e) => { handleModify({ endDate: e.target.value }, \"endDateEl\") }} />\r\n                </div>\r\n            </div>\r\n            <div className=\"edit-todo-control\" >\r\n                <div onClick={handleCheckboxClick} className={`toggle-checked-btn ${!completed && 'active'}`} title={completed ? \"Mark as uncompleted\" : \"Mark as completed\"}>\r\n                    {!completed && <CgRadioCheck />}\r\n                    {completed && <FiCheckCircle />}\r\n                </div>\r\n                <div onClick={handleEditClick} className={`toggle-edit-btn ${editMode && 'active'}`} title={editMode ? \"Click to save\" : \"Click to edit\"}>\r\n                    {!editMode && <GrEdit />}\r\n                    {editMode && <AiOutlineSave />}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Todo;","import Todo from './Todo';\r\nimport { CSSTransitionGroup } from \"react-transition-group\";\r\n\r\n\r\nfunction TodoList({ globalFunctions, todosArr, component, componentClassName }) {\r\n\r\n    let todosHTMLItems = todosArr.map(todoObj => {\r\n        return <Todo key={todoObj.id} globalFunctions={globalFunctions} todoDetails={todoObj} />;\r\n    });\r\n\r\n    return (\r\n        <CSSTransitionGroup\r\n            component={component}\r\n            className={componentClassName}\r\n            transitionName=\"items-list\"\r\n            transitionEnter={true}\r\n            transitionLeave={true}\r\n            transitionEnterTimeout={500}\r\n            transitionLeaveTimeout={600}\r\n            transitionAppear={true}\r\n            transitionAppearTimeout={500}\r\n        >\r\n            {todosHTMLItems}\r\n            {todosHTMLItems.length < 1 && (<h3>...</h3>)}\r\n        </CSSTransitionGroup>\r\n    );\r\n\r\n}\r\n\r\nexport default TodoList;","import { useState, useRef } from 'react'\r\nimport { GrAddCircle } from \"@react-icons/all-files/gr/GrAddCircle\";\r\n\r\nfunction AddTodoForm({ globalFunctions }) {\r\n\r\n    const descriptionInputId = \"formDescriptionInput1\";\r\n\r\n    const todaysDate = new Date().toISOString().split(\"T\")[0];\r\n    const chosenMaxDate = \"2030-01-01\";\r\n\r\n    const [nameInput, setNameInput] = useState(\"\");\r\n    const [descriptionInput, setDescriptionInput] = useState(\"\");\r\n    const [startDateInput, setStartDateInput] = useState(todaysDate);\r\n    const [endDateInput, setEndDateInput] = useState(todaysDate);\r\n    const completedInput = false; // todo checked as completed\r\n    const editModeInput = false; // todo checked to be edited\r\n    const viewStateInput = true; // todo that has been cleared and cant be altered\r\n\r\n    const startDateEl = useRef(\"\");\r\n    const endDateEl = useRef(\"\");\r\n\r\n    const startMinDate = todaysDate;\r\n    const startMaxDate = chosenMaxDate;\r\n    const endMinDate = todaysDate;\r\n    const endMaxDate = chosenMaxDate;\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (nameInput === \"\") return;\r\n\r\n        const defaultDescriptionInput = (descriptionInput === \"\") ? 'No description given' : descriptionInput;\r\n        const defaultStartDateInput = (startDateInput === \"\") ? new Date().toISOString().substring(0, 10) : startDateInput;\r\n        const defaultEndDateInput = (endDateInput === \"\") ? new Date().toISOString().substring(0, 10) : endDateInput;\r\n        setDescriptionInput(defaultDescriptionInput);\r\n        setStartDateInput(defaultStartDateInput);\r\n        setEndDateInput(defaultEndDateInput);\r\n\r\n        globalFunctions.app.handleAddTodo(nameInput, defaultDescriptionInput, defaultStartDateInput, defaultEndDateInput, completedInput, editModeInput, viewStateInput);\r\n        setNameInput(\"\");\r\n        setDescriptionInput(\"\");\r\n        setStartDateInput(todaysDate);\r\n        setEndDateInput(todaysDate);\r\n    }\r\n\r\n    const handleStartDateSetter = (e) => {\r\n        // ensures start date and end date dont overlap in the wrong direction\r\n        if (e.target.value > endDateEl.current.value) setEndDateInput(e.target.value);\r\n        setStartDateInput(e.target.value)\r\n    }\r\n\r\n    const handleEndDateSetter = (e) => {\r\n        // ensures start date and end date dont overlap in the wrong direction\r\n        if (e.target.value < startDateEl.current.value) setStartDateInput(e.target.value);\r\n        setEndDateInput(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={onSubmit} className=\"add-todo-form\">\r\n            <div className=\"controls-header\">Add a new item</div>\r\n            <div className=\"controls-wrapper\">\r\n                <div className=\"todo input\">\r\n                    <div className=\"todo-content\">\r\n                        <div>\r\n                            <div>\r\n                                <label htmlFor=\"taskName1\" className=\"\" >Task name</label>\r\n                            </div>\r\n                            <input id=\"taskName1\" type=\"text\" placeholder=\"my first task\" value={nameInput} onChange={(e) => { setNameInput(e.target.value) }} required />\r\n                        </div>\r\n                        <div>\r\n                            <div>\r\n                                <label htmlFor={descriptionInputId} className=\"\" >Description</label>\r\n                            </div>\r\n                            <textarea id={descriptionInputId} type=\"textarea\" placeholder=\"No description given\" value={descriptionInput} onChange={(e) => { setDescriptionInput(e.target.value) }} />\r\n                        </div>\r\n                        <div>\r\n                            <div>\r\n                                <label htmlFor=\"start-date\" >From:</label>\r\n                            </div>\r\n                            <div>\r\n                                <input ref={startDateEl} id=\"start-date\" type=\"date\" min={startMinDate} max={startMaxDate} value={startDateInput} onChange={handleStartDateSetter} />\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <div>\r\n                                <label htmlFor=\"end-date\">To:</label>\r\n                            </div>\r\n                            <div>\r\n                                <input ref={endDateEl} id=\"end-date\" type=\"date\" min={endMinDate} max={endMaxDate} value={endDateInput} onChange={handleEndDateSetter} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"btn-type-1\">\r\n                <GrAddCircle />\r\n                <input type=\"submit\" value=\"Add task\" title=\"Add a new task to your list\" className=\"btn-clear\" />\r\n            </div>\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\nexport default AddTodoForm;","\r\n\r\nfunction ProgressBar({ details:{width, fill, outerClassName, innerClassName, height} }) {\r\n\r\n    return (\r\n        <div className={outerClassName} style={{width:width, height:height, display:\"inline-block\", backgroundColor:\"red\", position:\"relative\"}}>\r\n            <div className={innerClassName} style={{width:fill, height:\"130%\", display:\"inline-block\", backgroundColor:\"rgba(31, 164, 226)\", position:\"absolute\", top:\"-1px\", left:\"0px\", transition:\"width .2s ease-out\"}}></div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default ProgressBar;","import { useState, useEffect } from 'react';\nimport './App.scss';\nimport TodoList from './components/TodoList';\nimport AddTodoForm from \"./components/AddTodoForm\";\nimport { v4 as uuidv4 } from 'uuid';\nimport ProgressBar from \"./components/ProgressBar\";\nimport { BiRefresh } from \"@react-icons/all-files/bi/BiRefresh\";\nimport { BsToggles } from \"@react-icons/all-files/bs/BsToggles\";\nimport { BiArchive } from \"@react-icons/all-files/bi/BiArchive\";\nimport { MdDeleteForever } from \"@react-icons/all-files/md/MdDeleteForever\";\nimport { AiOutlineCloseCircle } from \"@react-icons/all-files/ai/AiOutlineCloseCircle\";\nimport { RiMenuAddFill } from \"@react-icons/all-files/ri/RiMenuAddFill\";\n\n\nconst LOCAL_STORAGE_KEY_CURRENT = 'myTodosApp.todos1.current';\nconst LOCAL_STORAGE_KEY_CLEARED = 'myTodosApp.todos1.cleared';\n\nfunction App() {\n\n  const [todos, setTodos] = useState([]);\n  const [clearedTodos, setClearedTodos] = useState([]);\n\n  const handleToggleTodo = async (id) => {\n    const newTodos = [...todos];\n    const todo = newTodos.find(todo => todo.id === id);\n    todo.completed = !todo.completed;\n    setTodos(newTodos);\n\n  }\n\n  const handleRefreshTodos = async () => {\n    let newTodos = [...todos];\n\n    // sort by date\n    newTodos.sort((a, b) => (\"\" + a.endDate).localeCompare(b.endDate));\n    \n    // sort by completed\n    newTodos.sort((a, b) => {\n      if (a.completed === false && b.completed === true) {\n        return -1;\n      }\n      if (a.completed === true && b.completed === false) {\n        return 1;\n      }\n      return 0;\n    });\n    \n    setTodos(newTodos);\n  }\n\n  const handleToggleEditTodo = (id) => {\n    const newTodos = [...todos];\n    const todo = newTodos.find(todo => todo.id === id);\n    todo.editMode = !todo.editMode;\n    setTodos(newTodos);\n  }\n\n  const handleAddTodo = (nameInput, descriptionInput, startDateInput, endDateInput, completedInput, editModeInput, viewStateInput) => {\n    const newTodo = {\n      id: uuidv4(),\n      name: nameInput,\n      description: descriptionInput,\n      startDate: startDateInput,\n      endDate: endDateInput,\n      completed: completedInput,\n      editMode: editModeInput,\n      viewState: viewStateInput\n    };\n    setTodos([newTodo, ...todos]);\n  }\n\n  const handleModifyTodo = (id, newPropsObj) => {\n    let newTodos = todos.filter(todoObj => todoObj.id !== id);\n    let todoToModify = todos.find(todoObj => todoObj.id === id);\n    let todoToModifyIdx = todos.findIndex(todoObj => todoObj.id === id);\n    newPropsObj = { ...todoToModify, ...newPropsObj };\n    newTodos.splice(todoToModifyIdx, 0, newPropsObj);\n    setTodos(newTodos);\n  }\n\n  const handleClearCompleted = () => {\n    if (todos.length < 1) return;\n    const clearedTodos = todos.filter(todo => {\n      return todo.completed;\n    }).map(todo => {\n      return { ...todo, ...{ viewState: false }, ...{ editMode: false } };\n    });\n    setClearedTodos(prev => {\n      return [...prev, ...clearedTodos];\n    });\n    const newTodos = todos.filter(todo => {\n      return !todo.completed;\n    });\n    setTodos(newTodos);\n  }\n\n  const handleMarkAllCompleted = () => {\n    if (todos.length < 1) return;\n    let newTodos;\n    if (todos[0].completed === true) {\n      newTodos = todos.map(todo => {\n        todo.completed = false;\n        return todo;\n      });\n    }\n    else {\n      newTodos = todos.map(todo => {\n        todo.completed = true;\n        return todo;\n      });\n    }\n    setTodos(newTodos);\n  }\n\n  const handleDeleteClearedTodos = () => {\n    if (clearedTodos.length < 1) return;\n    setClearedTodos([]);\n  }\n\n  const toggleClassOnElement = (element, className) => {\n    if (element.classList.contains(className)) {\n      element.classList.remove(className);\n    }\n    else {\n      element.classList.add(className);\n    }\n  }\n\n  useEffect(() => {\n    const storedTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY_CURRENT));\n    if (storedTodos) setTodos(storedTodos);\n    const storedClearedTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY_CLEARED));\n    if (storedClearedTodos) setClearedTodos(storedClearedTodos);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY_CURRENT, JSON.stringify(todos));\n  }, [todos]);\n\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY_CLEARED, JSON.stringify(clearedTodos));\n  }, [clearedTodos]);\n\n  const globalFunctions = {\n    app: {\n      handleToggleTodo: handleToggleTodo,\n      handleAddTodo: handleAddTodo,\n      handleToggleEditTodo: handleToggleEditTodo,\n      handleModifyTodo: handleModifyTodo\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"main-container\">\n        <div className=\"todos-container\">\n          <div className=\"todos-header\">\n            <div>\n              <span>{todos.filter(t => !t.completed).length}/{todos.length} tasks left</span>\n              <ProgressBar details={{ width: \"100%\", height: \".5rem\", fill: `${todos.length < 1 ? \"100\" : (todos.filter(t => t.completed).length / todos.length) * 100}%`, outerClassName: \"progress-bar-outer\", innerClassName: \"progress-bar-inner\" }} />\n            </div>\n            <h1 className=\"title-myTodoList\">My Task List</h1>\n          </div>\n          <TodoList globalFunctions={globalFunctions} todosArr={todos} component=\"div\" componentClassName=\"current-todos\" />\n          <div className=\"toggle-side-view-container open\">\n            <button className=\"btn-type-1\"\n              onClick={() => {\n                toggleClassOnElement(document.getElementsByClassName('side-container')[0], \"show\");\n              }} title=\"add a new item/view archived tasks\" >\n              <RiMenuAddFill />\n              Menu\n            </button>\n          </div>\n          <div className=\"quick-controls-container\">\n            <button onClick={handleRefreshTodos} className=\"btn-type-1\" title=\"Put uncompleted and due tasks at the top\">\n              <BiRefresh />\n              Refresh\n            </button>\n            <button onClick={handleMarkAllCompleted} className=\"btn-type-1\" title=\"Mark as as completed or uncompleted\">\n              <BsToggles />\n              Toggle all as completed\n            </button>\n            <button onClick={handleClearCompleted} className=\"btn-type-1\" title=\"Put completed tasks in an archive\">\n              <BiArchive />\n              Archive completed tasks\n            </button>\n          </div>\n        </div>\n        <div className=\"side-container\">\n          <div className=\"toggle-side-view-container close\">\n            <button className=\"btn-type-1\"\n              onClick={() => {\n                toggleClassOnElement(document.getElementsByClassName('side-container')[0], \"show\");\n              }}>\n              <AiOutlineCloseCircle />\n              Close\n            </button>\n          </div>\n          <div className=\"controls-container\">\n            <AddTodoForm globalFunctions={globalFunctions} />\n          </div>\n          <div className=\"cleared-todos-container\">\n            <div className=\"cleared-todos-header\">\n              <span>Archived Tasks({clearedTodos.length})</span>\n              <button onClick={handleDeleteClearedTodos} className=\"btn-type-1\" title=\"Delete all tasks in archive\">\n                <MdDeleteForever />\n                Delete all\n              </button>\n            </div>\n            <TodoList todosArr={clearedTodos} component=\"div\" componentClassName=\"cleared-todos-wrapper\" globalFunctions={globalFunctions} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}