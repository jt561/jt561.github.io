{"version":3,"sources":["components/Todo.js","components/TodoList.js","components/AddTodoForm.js","components/ProgressBar.js","App.js","index.js"],"names":["Todo","globalFunctions","todoDetails","id","name","description","startDate","endDate","completed","editMode","viewState","startDateEl","useRef","endDateEl","todaysDate","Date","toISOString","split","startMinDate","endMinDate","handleModify","obj","elType","app","handleModifyTodo","className","type","value","readOnly","onChange","e","target","BsArrow90DegDown","ref","min","max","chosenMaxDate","BsArrowReturnRight","onClick","handleToggleTodo","title","ImCheckboxUnchecked","FaCheckSquare","handleToggleEditTodo","AiFillEdit","AiFillSave","TodoList","todosArr","map","todoObj","AddTodoForm","useState","nameInput","setNameInput","descriptionInput","setDescriptionInput","startDateInput","setStartDateInput","endDateInput","setEndDateInput","onSubmit","preventDefault","defaultDescriptionInput","defaultStartDateInput","substring","defaultEndDateInput","handleAddTodo","placeholder","required","current","ProgressBar","details","width","fill","outerClassName","innerClassName","height","style","display","backgroundColor","position","top","left","transition","LOCAL_STORAGE_KEY_CURRENT","LOCAL_STORAGE_KEY_CLEARED","App","todos","setTodos","clearedTodos","setClearedTodos","a","newTodos","todo","find","handleRefreshTodos","sort","b","useEffect","storedTodos","JSON","parse","localStorage","getItem","storedClearedTodos","setItem","stringify","completedInput","editModeInput","viewStateInput","newTodo","uuidv4","newPropsObj","filter","todoToModify","todoToModifyIdx","findIndex","splice","t","length","prev","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aaf9aa50.chunk.js","sourcesContent":["import { useRef } from 'react';\r\nimport { ImCheckboxUnchecked } from \"@react-icons/all-files/im/ImCheckboxUnchecked\";\r\nimport { FaCheckSquare } from \"@react-icons/all-files/fa/FaCheckSquare\";\r\nimport { AiFillEdit } from \"@react-icons/all-files/ai/AiFillEdit\";\r\nimport { AiFillSave } from \"@react-icons/all-files/ai/AiFillSave\";\r\nimport { BsArrow90DegDown } from \"@react-icons/all-files/bs/BsArrow90DegDown\";\r\nimport { BsArrowReturnRight } from \"@react-icons/all-files/bs/BsArrowReturnRight\";\r\n\r\nfunction Todo({ globalFunctions, todoDetails: { id, name, description, startDate, endDate, completed, editMode, viewState } }) {\r\n\r\n    const startDateEl = useRef(\"\");\r\n    const endDateEl = useRef(\"\");\r\n\r\n    const todaysDate = new Date().toISOString().split(\"T\")[0];\r\n    const chosenMaxDate = \"2030-01-01\";\r\n    const startMinDate = todaysDate;\r\n    const startMaxDate = chosenMaxDate;\r\n    const endMinDate = todaysDate;\r\n    const endMaxDate = chosenMaxDate;\r\n\r\n    const handleCheckboxClick = () => {\r\n        if (!viewState) return; // dont toggle if it is in \"frozen\" mode\r\n        globalFunctions.app.handleToggleTodo(id);\r\n    }\r\n\r\n    const handleEditClick = () => {\r\n        if (!viewState) return;\r\n        globalFunctions.app.handleToggleEditTodo(id);\r\n    }\r\n\r\n    const handleModify = (obj, elType = \"\") => {\r\n        switch (elType) {\r\n            // ensures start date and end date dont overlap in the wrong direction\r\n            case \"startDateEl\":\r\n                if (obj.startDate > endDate) obj = { ...obj, endDate: obj.startDate };\r\n                break;\r\n            case \"endDateEl\":\r\n                if (obj.endDate < startDate) obj = { ...obj, startDate: obj.endDate };\r\n                break;\r\n            default: break;\r\n        }\r\n        globalFunctions.app.handleModifyTodo(id, obj);\r\n    }\r\n\r\n    return (\r\n        <div className={`todo ${editMode ? 'input' : ''} ${viewState ? 'view' : 'not-view'} ${completed ? 'completed':'uncompleted'}`} >\r\n            <div className=\"todo-content\">\r\n                <div>\r\n                    <input type=\"text\" value={name} readOnly={!editMode} onChange={(e) => { handleModify({ name: e.target.value }) }} />\r\n                </div>\r\n                <div>\r\n                    <textarea type=\"textarea\" value={description} readOnly={!editMode} onChange={(e) => { handleModify({ description: e.target.value }) }} />\r\n                </div>\r\n                <div className=\"startDateContainer\">\r\n                    <BsArrow90DegDown />\r\n                    <input type=\"date\" ref={startDateEl} min={startMinDate} max={startMaxDate} value={startDate} readOnly={!editMode} onChange={(e) => { handleModify({ startDate: e.target.value }, \"startDateEl\") }} />\r\n                </div>\r\n                <div className=\"endDateContainer\">\r\n                    <BsArrowReturnRight />\r\n                    <input type=\"date\" ref={endDateEl} min={endMinDate} max={endMaxDate} value={endDate} readOnly={!editMode} onChange={(e) => { handleModify({ endDate: e.target.value }, \"endDateEl\") }} />\r\n                </div>\r\n            </div>\r\n            <div className=\"edit-todo-control\" >\r\n                <div onClick={handleCheckboxClick} className={`toggle-checked-btn ${!completed && 'active'}`} title={completed ? \"Mark as uncompleted\" : \"Mark as completed\"}>\r\n                    {!completed && <ImCheckboxUnchecked />}\r\n                    {completed && <FaCheckSquare />}\r\n                </div>\r\n                <div onClick={handleEditClick} className={`toggle-edit-btn ${editMode && 'active'}`} title={editMode ? \"Click to save\" : \"Click to edit\"}>\r\n                    {!editMode && <AiFillEdit />}\r\n                    {editMode && <AiFillSave />}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Todo;","import Todo from './Todo';\r\n\r\nfunction TodoList({ globalFunctions, todosArr}) {\r\n\r\n    return (\r\n        todosArr.map(todoObj => {\r\n            return <Todo key={todoObj.id} globalFunctions={globalFunctions} todoDetails={todoObj} />;\r\n        })  \r\n    );\r\n\r\n}\r\n\r\nexport default TodoList;","import { useState, useRef } from 'react'\r\n\r\nfunction AddTodoForm({ globalFunctions }) {\r\n\r\n    const todaysDate = new Date().toISOString().split(\"T\")[0];\r\n    const chosenMaxDate = \"2030-01-01\";\r\n\r\n    const [nameInput, setNameInput] = useState(\"\");\r\n    const [descriptionInput, setDescriptionInput] = useState(\"\");\r\n    const [startDateInput, setStartDateInput] = useState(todaysDate);\r\n    const [endDateInput, setEndDateInput] = useState(todaysDate);\r\n    const completedInput = false; // todo checked as completed\r\n    const editModeInput = false; // todo checked to be edited\r\n    const viewStateInput = true; // todo that has been cleared and cant be altered\r\n\r\n    const startDateEl = useRef(\"\");\r\n    const endDateEl = useRef(\"\");\r\n     \r\n    const startMinDate = todaysDate;\r\n    const startMaxDate = chosenMaxDate;\r\n    const endMinDate = todaysDate;\r\n    const endMaxDate = chosenMaxDate;\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (nameInput === \"\") return;\r\n\r\n        const defaultDescriptionInput = (descriptionInput === \"\") ? 'No description given' : descriptionInput;\r\n        const defaultStartDateInput = (startDateInput === \"\") ? new Date().toISOString().substring(0, 10) : startDateInput;\r\n        const defaultEndDateInput = (endDateInput === \"\") ? new Date().toISOString().substring(0, 10) : endDateInput;\r\n        setDescriptionInput(defaultDescriptionInput);\r\n        setStartDateInput(defaultStartDateInput);\r\n        setEndDateInput(defaultEndDateInput);\r\n\r\n        globalFunctions.app.handleAddTodo(nameInput, defaultDescriptionInput, defaultStartDateInput, defaultEndDateInput, completedInput, editModeInput, viewStateInput);\r\n        setNameInput(\"\");\r\n        setDescriptionInput(\"\");\r\n        setStartDateInput(todaysDate);\r\n        setEndDateInput(todaysDate);\r\n    }\r\n\r\n    const handleStartDateSetter = (e) => {\r\n        // ensures start date and end date dont overlap in the wrong direction\r\n        if (e.target.value > endDateEl.current.value) setEndDateInput(e.target.value);\r\n        setStartDateInput(e.target.value)\r\n    }\r\n\r\n    const handleEndDateSetter = (e) => {\r\n        // ensures start date and end date dont overlap in the wrong direction\r\n        if (e.target.value < startDateEl.current.value) setStartDateInput(e.target.value);\r\n        setEndDateInput(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={onSubmit} className=\"add-todo-form\">\r\n            <div className=\"controls-header\">Add a new item</div>\r\n            <div className=\"controls-wrapper\">\r\n                <div className=\"todo input\">\r\n                    <div className=\"todo-content\">\r\n                        <div>\r\n                            <input type=\"text\" placeholder=\"Task - name\" value={nameInput} onChange={(e) => { setNameInput(e.target.value) }} required />\r\n                        </div>\r\n                        <div>\r\n                            <textarea type=\"textarea\" placeholder=\"Description\" value={descriptionInput} onChange={(e) => { setDescriptionInput(e.target.value) }} />\r\n                        </div>\r\n                        <div>\r\n                            <div>\r\n                                <label >From:</label>\r\n                            </div>\r\n                            <div>\r\n                                <input ref={startDateEl} id=\"start-date\" type=\"date\" min={startMinDate} max={startMaxDate} value={startDateInput} onChange={handleStartDateSetter} />\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <div>\r\n                                <label>To:</label>\r\n                            </div>\r\n                            <div>\r\n                                <input ref={endDateEl} id=\"end-date\" type=\"date\" min={endMinDate} max={endMaxDate} value={endDateInput} onChange={handleEndDateSetter} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <input type=\"submit\" value=\"Add a task\" className=\"btn-type-1\" title=\"Add a new task to your list\"/>\r\n            </div>\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\nexport default AddTodoForm;","\r\n\r\nfunction ProgressBar({ details:{width, fill, outerClassName, innerClassName, height} }) {\r\n\r\n    return (\r\n        <div className={outerClassName} style={{width:width, height:height, display:\"inline-block\", backgroundColor:\"red\", position:\"relative\"}}>\r\n            <div className={innerClassName} style={{width:fill, height:\"100%\", display:\"inline-block\", backgroundColor:\"green\", position:\"absolute\", top:\"0\", left:\"0\", transition:\"width .2s ease-out\"}}></div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default ProgressBar;","import { useState, useEffect } from 'react';\nimport './App.scss';\nimport TodoList from './components/TodoList';\nimport AddTodoForm from \"./components/AddTodoForm\";\nimport { v4 as uuidv4 } from 'uuid';\nimport ProgressBar from \"./components/ProgressBar\";\n\nconst LOCAL_STORAGE_KEY_CURRENT = 'myTodosApp.todos1.current';\nconst LOCAL_STORAGE_KEY_CLEARED = 'myTodosApp.todos1.cleared';\n\nfunction App() {\n\n  const [todos, setTodos] = useState([]);\n  const [clearedTodos, setClearedTodos] = useState([]);\n\n  // const [todosIsEmpty, setTodosIsEmpty] = useState(true);\n  // const [loadingDots, setLoadingDots] = useState(\"...\");\n\n  // const handleLoadingDots = async () => {\n  //   setTimeout(() => {\n  //     const newLoadingDots = loadingDots.length === 1 ? \"..\" : loadingDots.length === 2 ? \"...\" : \".\";\n  //     setLoadingDots(newLoadingDots);\n  //   }, 400);\n  // }\n\n  const handleToggleTodo = async (id) => {\n    const newTodos = [...todos];\n    const todo = newTodos.find(todo => todo.id === id);\n    todo.completed = !todo.completed;\n    setTodos(newTodos);\n\n  }\n\n  const handleRefreshTodos = async () => {\n    let newTodos = [...todos];\n    newTodos.sort((a, b) => {\n      if (a.completed === false && b.completed === true) {\n        return -1;\n      }\n      if (a.completed === true && b.completed === false) {\n        return 1;\n      }\n      return 0;\n    });\n    setTodos(newTodos);\n  }\n\n  const handleToggleEditTodo = (id) => {\n    const newTodos = [...todos];\n    const todo = newTodos.find(todo => todo.id === id);\n    todo.editMode = !todo.editMode;\n    setTodos(newTodos);\n  }\n\n  const handleAddTodo = (nameInput, descriptionInput, startDateInput, endDateInput, completedInput, editModeInput, viewStateInput) => {\n    const newTodo = {\n      id: uuidv4(),\n      name: nameInput,\n      description: descriptionInput,\n      startDate: startDateInput,\n      endDate: endDateInput,\n      completed: completedInput,\n      editMode: editModeInput,\n      viewState: viewStateInput\n    };\n    setTodos([newTodo, ...todos]);\n  }\n\n  const handleModifyTodo = (id, newPropsObj) => {\n    let newTodos = todos.filter(todoObj => todoObj.id !== id);\n    let todoToModify = todos.find(todoObj => todoObj.id === id);\n    let todoToModifyIdx = todos.findIndex(todoObj => todoObj.id === id);\n    newPropsObj = { ...todoToModify, ...newPropsObj };\n    newTodos.splice(todoToModifyIdx, 0, newPropsObj);\n    setTodos(newTodos);\n  }\n\n  const handleClearCompleted = () => {\n    if (todos.length < 1) return;\n    const clearedTodos = todos.filter(todo => {\n      return todo.completed;\n    }).map(todo => {\n      return { ...todo, ...{ viewState: false }, ...{ editMode: false } };\n    });\n    setClearedTodos(prev => {\n      return [...prev, ...clearedTodos];\n    });\n    const newTodos = todos.filter(todo => {\n      return !todo.completed;\n    });\n    setTodos(newTodos);\n  }\n\n  const handleMarkAllCompleted = () => {\n    if (todos.length < 1) return;\n    let newTodos;\n    if (todos[0].completed === true) {\n      newTodos = todos.map(todo => {\n        todo.completed = false;\n        return todo;\n      });\n    }\n    else {\n      newTodos = todos.map(todo => {\n        todo.completed = true;\n        return todo;\n      });\n    }\n    setTodos(newTodos);\n  }\n\n  const handleDeleteClearedTodos = () => {\n    if (clearedTodos.length < 1) return;\n    setClearedTodos([]);\n  }\n\n  useEffect(() => {\n    const storedTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY_CURRENT));\n    if (storedTodos) setTodos(storedTodos);\n    const storedClearedTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY_CLEARED));\n    if (storedClearedTodos) setClearedTodos(storedClearedTodos);\n    // if (todos.length === 0) {\n    //   setTodosIsEmpty(true);\n    //   handleLoadingDots();\n    // }\n    // else {\n    //   setTodosIsEmpty(false);\n    // }\n  }, []);\n\n  // useEffect(() => {\n  //   if (todos.length === 0)\n  //   {\n  //     setTodosIsEmpty(true);\n  //     handleLoadingDots();\n  //   }\n  //   else\n  //   {\n  //     setTodosIsEmpty(false);\n  //   }\n  // }, [loadingDots, todosIsEmpty]);\n\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY_CURRENT, JSON.stringify(todos));\n    // if (todos.length === 0) {\n    //   setTodosIsEmpty(true);\n    // }\n    // else {\n    //   setTodosIsEmpty(false);\n    // }\n  }, [todos]);\n\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY_CLEARED, JSON.stringify(clearedTodos));\n  }, [clearedTodos]);\n\n  const globalFunctions = {\n    app: {\n      handleToggleTodo: handleToggleTodo,\n      handleAddTodo: handleAddTodo,\n      handleToggleEditTodo: handleToggleEditTodo,\n      handleModifyTodo: handleModifyTodo\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"main-container\">\n        <div className=\"todos-container\">\n          <div className=\"todos-header\">\n            <div>\n              <span>{todos.filter(t => !t.completed).length}/{todos.length} tasks left</span>\n              <ProgressBar details={{ width: \"100%\", height: \".5rem\", fill:`${todos.length < 1 ? \"100\": (todos.filter(t => t.completed).length/todos.length)*100}%`, outerClassName:\"progress-bar-outer\", innerClassName:\"progress-bar-inner\" } }/>\n            </div>\n            <h1 className=\"title-myTodoList\">My Task List</h1>\n          </div>\n          <div className=\"current-todos\">\n            {todos.length === 0 && (<h1>...</h1>)}\n            <TodoList globalFunctions={globalFunctions} todosArr={todos} />\n          </div>\n          <div className=\"quick-controls-container\">\n            <button onClick={handleRefreshTodos} className=\"btn-type-1\" title=\"Put uncompleted task at the top\">Refresh</button>\n            <button onClick={handleMarkAllCompleted} className=\"btn-type-1\" title=\"Mark as as completed or uncompleted\">Toggle all as completed</button>\n            <button onClick={handleClearCompleted} className=\"btn-type-1\" title=\"Put completed tasks in an archive\">Archive completed tasks</button>\n\n          </div>\n        </div>\n        <div className=\"side-container\">\n          <div className=\"controls-container\">\n            <AddTodoForm globalFunctions={globalFunctions} />\n          </div>\n          <div className=\"cleared-todos-container\">\n            <div className=\"cleared-todos-header\">\n              <span>Archived Tasks({clearedTodos.length})</span>\n              <button onClick={handleDeleteClearedTodos} className=\"btn-type-1\" title=\"Delete all tasks in archive\">Delete all</button>\n            </div>\n            <div className=\"cleared-todos-wrapper\">\n              <TodoList todosArr={clearedTodos} />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}