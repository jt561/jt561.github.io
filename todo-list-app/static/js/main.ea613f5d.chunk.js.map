{"version":3,"sources":["components/Todo.js","components/TodoList.js","components/AddTodoForm.js","App.js","index.js"],"names":["Todo","globalFunctions","todoDetails","id","name","description","startDate","endDate","completed","editMode","viewState","handleModify","obj","app","handleModifyTodo","className","type","value","readOnly","onChange","e","target","onClick","handleToggleTodo","ImCheckboxUnchecked","FaCheckSquare","handleToggleEditTodo","AiFillEdit","AiFillSave","TodoList","todosArr","map","todoObj","AddTodoForm","useState","nameInput","setNameInput","descriptionInput","setDescriptionInput","startDateInput","setStartDateInput","endDateInput","setEndDateInput","onSubmit","preventDefault","defaultDescriptionInput","defaultStartDateInput","Date","toISOString","substring","defaultEndDateInput","handleAddTodo","placeholder","LOCAL_STORAGE_KEY_CURRENT","LOCAL_STORAGE_KEY_CLEARED","App","todos","setTodos","clearedTodos","setClearedTodos","a","newTodos","todo","find","handleRefreshTodos","sort","b","useEffect","storedTodos","JSON","parse","localStorage","getItem","storedClearedTodos","setItem","stringify","completedInput","editModeInput","viewStateInput","newTodo","uuidv4","newPropsObj","filter","todoToModify","todoToModifyIdx","findIndex","splice","t","length","prev","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kRAoDeA,MA/Cf,YAAgI,IAAhHC,EAA+G,EAA/GA,gBAA+G,IAA9FC,YAAeC,EAA+E,EAA/EA,GAAIC,EAA2E,EAA3EA,KAAMC,EAAqE,EAArEA,YAAaC,EAAwD,EAAxDA,UAAWC,EAA6C,EAA7CA,QAASC,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,UAYtGC,EAAe,SAACC,GAClBX,EAAgBY,IAAIC,iBAAiBX,EAAIS,IAG7C,OACI,sBAAKG,UAAS,eAAUN,EAAW,QAAS,GAA9B,YAAoCC,EAAY,OAAO,YAArE,UACI,sBAAKK,UAAU,eAAf,UACI,8BACI,uBAAOC,KAAK,OAAOC,MAAOb,EAAMc,UAAWT,EAAUU,SAAU,SAACC,GAAQT,EAAa,CAAEP,KAAMgB,EAAEC,OAAOJ,aAE1G,8BACI,0BAAUD,KAAK,WAAWC,MAAOZ,EAAaa,UAAWT,EAAUU,SAAU,SAACC,GAAQT,EAAa,CAAEN,YAAae,EAAEC,OAAOJ,aAE/H,8BACI,uBAAOD,KAAK,OAAOC,MAAOX,EAAWY,UAAWT,EAAUU,SAAU,SAACC,GAAQT,EAAa,CAAEL,UAAWc,EAAEC,OAAOJ,aAEpH,8BACI,uBAAOD,KAAK,OAAOC,MAAOV,EAASW,UAAWT,EAAUU,SAAU,SAACC,GAAQT,EAAa,CAAEJ,QAASa,EAAEC,OAAOJ,gBAGpH,sBAAKF,UAAU,oBAAf,UACI,sBAAKO,QA/BW,WACnBZ,GACLT,EAAgBY,IAAIU,iBAAiBpB,IA6BMY,UAAS,8BAAyBP,GAAa,UAAlF,WACMA,GAAa,cAACgB,EAAA,oBAAD,IACdhB,GAAa,cAACiB,EAAA,cAAD,OAElB,sBAAKH,QA9BO,WACfZ,GACLT,EAAgBY,IAAIa,qBAAqBvB,IA4BFY,UAAS,0BAAqBN,GAAY,UAAzE,WACMA,GAAY,cAACkB,EAAA,WAAD,IACblB,GAAY,cAACmB,EAAA,WAAD,cChClBC,MAVf,YAAiD,IAA7B5B,EAA4B,EAA5BA,gBAEhB,OAF4C,EAAX6B,SAGpBC,KAAI,SAAAC,GACT,OAAO,cAAC,EAAD,CAAuB/B,gBAAiBA,EAAiBC,YAAa8B,GAA3DA,EAAQ7B,QC+DvB8B,MAnEf,YAA2C,IAApBhC,EAAmB,EAAnBA,gBAAmB,EAEJiC,mBAAS,IAFL,mBAE/BC,EAF+B,KAEpBC,EAFoB,OAGUF,mBAAS,IAHnB,mBAG/BG,EAH+B,KAGbC,EAHa,OAIMJ,mBAAS,IAJf,mBAI/BK,EAJ+B,KAIfC,EAJe,OAKEN,mBAAS,IALX,mBAK/BO,EAL+B,KAKjBC,EALiB,KA4BtC,OACI,uBAAMC,SAnBO,SAACvB,GAEd,GADAA,EAAEwB,iBACgB,KAAdT,EAAJ,CAEA,IAAMU,EAAgD,KAArBR,EAA2B,uBAAyBA,EAC/ES,EAA4C,KAAnBP,GAAyB,IAAIQ,MAAOC,cAAcC,UAAU,EAAG,IAAMV,EAC9FW,EAAwC,KAAjBT,GAAuB,IAAIM,MAAOC,cAAcC,UAAU,EAAG,IAAMR,EAChGH,EAAoBO,GACpBL,EAAkBM,GAClBJ,EAAgBQ,GAEhBjD,EAAgBY,IAAIsC,cAAchB,EAAWU,EAAyBC,EAAuBI,EAf1E,MACD,MACC,MAcnBd,EAAa,IACbE,EAAoB,IACpBE,EAAkB,IAClBE,EAAgB,MAIU3B,UAAU,gBAApC,UACI,qBAAKA,UAAU,kBAAf,4BACA,qBAAKA,UAAU,mBAAf,SACI,qBAAKA,UAAU,aAAf,SACI,sBAAKA,UAAU,eAAf,UACI,8BACI,uBAAOC,KAAK,OAAOoC,YAAY,eAAenC,MAAOkB,EAAWhB,SAAU,SAACC,GAAQgB,EAAahB,EAAEC,OAAOJ,YAE7G,8BACI,0BAAUD,KAAK,WAAWoC,YAAY,cAAcnC,MAAOoB,EAAkBlB,SAAU,SAACC,GAAQkB,EAAoBlB,EAAEC,OAAOJ,YAEjI,gCACI,8BACI,4CAEJ,8BACI,uBAAOd,GAAG,aAAaa,KAAK,OAAOC,MAAOsB,EAAgBpB,SAAU,SAACC,GAAQoB,EAAkBpB,EAAEC,OAAOJ,eAGhH,gCACI,8BACI,0CAEJ,8BACI,uBAAOd,GAAG,WAAWa,KAAK,OAAOC,MAAOwB,EAActB,SAAU,SAACC,GAAQsB,EAAgBtB,EAAEC,OAAOJ,sBAMtH,8BACI,uBAAOD,KAAK,SAASC,MAAM,WAAWF,UAAU,qB,QCxD1DsC,EAA4B,4BAC5BC,EAA4B,4BAiKnBC,MA/Jf,WAAgB,IAAD,EAEarB,mBAAS,IAFtB,mBAENsB,EAFM,KAECC,EAFD,OAG2BvB,mBAAS,IAHpC,mBAGNwB,EAHM,KAGQC,EAHR,KAKPpC,EAAgB,uCAAG,WAAOpB,GAAP,iBAAAyD,EAAA,sDACjBC,EADiB,YACFL,IACfM,EAAOD,EAASE,MAAK,SAAAD,GAAI,OAAIA,EAAK3D,KAAOA,MAC1CK,WAAasD,EAAKtD,UACvBiD,EAASI,GAJc,2CAAH,sDAQhBG,EAAkB,uCAAG,4BAAAJ,EAAA,uDACrBC,EADqB,YACNL,IACVS,MAAK,SAACL,EAAEM,GACf,OAAoB,IAAhBN,EAAEpD,YAAuC,IAAhB0D,EAAE1D,WACrB,GAEU,IAAhBoD,EAAEpD,YAAsC,IAAhB0D,EAAE1D,UACrB,EAEF,KAETiD,EAASI,GAXgB,2CAAH,qDAoFxBM,qBAAU,WACR,IAAMC,EAAcC,KAAKC,MAAMC,aAAaC,QAAQnB,IAChDe,GAAaX,EAASW,GAC1B,IAAMK,EAAqBJ,KAAKC,MAAMC,aAAaC,QAAQlB,IACvDmB,GAAoBd,EAAgBc,KACvC,IAEHN,qBAAU,WACRI,aAAaG,QAAQrB,EAA2BgB,KAAKM,UAAUnB,MAC9D,CAACA,IAEJW,qBAAU,WACRI,aAAaG,QAAQpB,EAA2Be,KAAKM,UAAUjB,MAC9D,CAACA,IAEJ,IAAMzD,EAAkB,CACtBY,IAAK,CACHU,iBAAkBA,EAClB4B,cAjFkB,SAAChB,EAAWE,EAAkBE,EAAgBE,EAAcmC,EAAgBC,EAAeC,GAC/G,IAAMC,EAAU,CACd5E,GAAI6E,cACJ5E,KAAM+B,EACN9B,YAAagC,EACb/B,UAAWiC,EACXhC,QAASkC,EACTjC,UAAWoE,EACXnE,SAAUoE,EACVnE,UAAWoE,GAEbrB,EAAS,CAACsB,GAAF,mBAAcvB,MAuEpB9B,qBAzFyB,SAACvB,GAC5B,IAAM0D,EAAQ,YAAOL,GACfM,EAAOD,EAASE,MAAK,SAAAD,GAAI,OAAIA,EAAK3D,KAAOA,KAC/C2D,EAAKrD,UAAYqD,EAAKrD,SACtBgD,EAASI,IAsFP/C,iBArEqB,SAACX,EAAI8E,GAC5B,IAAIpB,EAAWL,EAAM0B,QAAO,SAAAlD,GAAO,OAAIA,EAAQ7B,KAAOA,KAClDgF,EAAe3B,EAAMO,MAAK,SAAA/B,GAAO,OAAIA,EAAQ7B,KAAOA,KACpDiF,EAAkB5B,EAAM6B,WAAU,SAAArD,GAAO,OAAIA,EAAQ7B,KAAOA,KAChE8E,EAAW,2BAAQE,GAAiBF,GAEpCpB,EAASyB,OAAOF,EAAiB,EAAGH,GACpCxB,EAASI,MAkEX,OACE,qBAAK9C,UAAU,MAAf,SACE,sBAAKA,UAAU,iBAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,sBAAKA,UAAU,eAAf,UACE,iCAAOyC,EAAM0B,QAAO,SAAAK,GAAC,OAAKA,EAAE/E,aAAWgF,OAAvC,iBACA,oBAAIzE,UAAU,mBAAd,4BAEF,qBAAKA,UAAU,gBAAf,SACE,cAAC,EAAD,CAAUd,gBAAiBA,EAAiB6B,SAAU0B,MAExD,sBAAKzC,UAAU,2BAAf,UACE,wBAAQO,QAAS0C,EAAoBjD,UAAU,aAA/C,qBACA,wBAAQO,QA5Da,WAE7B,IAAIuC,EADAL,EAAMgC,OAAS,IAGjB3B,GADyB,IAAvBL,EAAM,GAAGhD,UACAgD,EAAMzB,KAAI,SAAA+B,GAEnB,OADAA,EAAKtD,WAAY,EACVsD,KAIEN,EAAMzB,KAAI,SAAA+B,GAEnB,OADAA,EAAKtD,WAAY,EACVsD,KAGXL,EAASI,KA6CwC9C,UAAU,aAAnD,qCACA,wBAAQO,QA7EW,WAC3B,KAAIkC,EAAMgC,OAAS,GAAnB,CACA,IAAM9B,EAAeF,EAAM0B,QAAO,SAAApB,GAChC,OAAOA,EAAKtD,aACXuB,KAAI,SAAA+B,GACL,OAAO,uCAAKA,GAAS,CAAEpD,WAAW,IAAY,CAAED,UAAU,OAE5DkD,GAAgB,SAAA8B,GACd,MAAM,GAAN,mBAAWA,GAAX,YAAoB/B,OAEtB,IAAMG,EAAWL,EAAM0B,QAAO,SAAApB,GAC5B,OAAQA,EAAKtD,aAEfiD,EAASI,KAgEsC9C,UAAU,aAAjD,yCAIJ,sBAAKA,UAAU,iBAAf,UACE,qBAAKA,UAAU,qBAAf,SACE,cAAC,EAAD,CAAad,gBAAiBA,MAEhC,sBAAKc,UAAU,0BAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,kDAAqB2C,EAAa8B,OAAlC,OACA,wBAAQlE,QAtDa,WAC3BoC,EAAa8B,OAAS,GAC1B7B,EAAgB,KAoDqC5C,UAAU,aAArD,2BAEF,qBAAKA,UAAU,wBAAf,SACE,cAAC,EAAD,CAAUe,SAAU4B,kBC1JlCgC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ea613f5d.chunk.js","sourcesContent":["import { ImCheckboxUnchecked } from \"@react-icons/all-files/im/ImCheckboxUnchecked\";\r\nimport { FaCheckSquare } from \"@react-icons/all-files/fa/FaCheckSquare\";\r\nimport { AiFillEdit } from \"@react-icons/all-files/ai/AiFillEdit\";\r\nimport { AiFillSave } from \"@react-icons/all-files/ai/AiFillSave\";\r\n\r\nfunction Todo({ globalFunctions, todoDetails: { id, name, description, startDate, endDate, completed, editMode, viewState } }) {\r\n\r\n    const handleCheckboxClick = () => {\r\n        if (!viewState) return; // dont toggle if it is in \"frozen\" mode\r\n        globalFunctions.app.handleToggleTodo(id);\r\n    }\r\n\r\n    const handleEditClick = () => {\r\n        if (!viewState) return;\r\n        globalFunctions.app.handleToggleEditTodo(id);\r\n    }\r\n\r\n    const handleModify = (obj) => {\r\n        globalFunctions.app.handleModifyTodo(id, obj);\r\n    }\r\n\r\n    return (\r\n        <div className={`todo ${editMode ? 'input' :''} ${viewState ? 'view':'not-view'}`} >\r\n            <div className=\"todo-content\">\r\n                <div>\r\n                    <input type=\"text\" value={name} readOnly={!editMode} onChange={(e) => { handleModify({ name: e.target.value }) }} />\r\n                </div>\r\n                <div>\r\n                    <textarea type=\"textarea\" value={description} readOnly={!editMode} onChange={(e) => { handleModify({ description: e.target.value }) }} />\r\n                </div>\r\n                <div>\r\n                    <input type=\"date\" value={startDate} readOnly={!editMode} onChange={(e) => { handleModify({ startDate: e.target.value }) }} />\r\n                </div>\r\n                <div>\r\n                    <input type=\"date\" value={endDate} readOnly={!editMode} onChange={(e) => { handleModify({ endDate: e.target.value }) }} />\r\n                </div>\r\n            </div>\r\n            <div className=\"edit-todo-control\" >\r\n                <div onClick={handleCheckboxClick} className={`toggle-checked-btn ${!completed && 'active'}`} >\r\n                    {!completed && <ImCheckboxUnchecked />}\r\n                    {completed && <FaCheckSquare />}\r\n                </div>\r\n                <div onClick={handleEditClick} className={`toggle-edit-btn ${editMode && 'active'}`} >\r\n                    {!editMode && <AiFillEdit />}\r\n                    {editMode && <AiFillSave />}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Todo;","import Todo from './Todo';\r\n\r\nfunction TodoList({ globalFunctions, todosArr}) {\r\n\r\n    return (\r\n        todosArr.map(todoObj => {\r\n            return <Todo key={todoObj.id} globalFunctions={globalFunctions} todoDetails={todoObj} />;\r\n        })  \r\n    );\r\n\r\n}\r\n\r\nexport default TodoList;","import { useState } from 'react'\r\n\r\nfunction AddTodoForm({ globalFunctions }) {\r\n\r\n    const [nameInput, setNameInput] = useState(\"\");\r\n    const [descriptionInput, setDescriptionInput] = useState(\"\");\r\n    const [startDateInput, setStartDateInput] = useState(\"\");\r\n    const [endDateInput, setEndDateInput] = useState(\"\");\r\n    const completedInput = false; // todo checked as completed\r\n    const editModeInput = false; // todo checked to be edited\r\n    const viewStateInput = true; // todo that has been cleared and cant be altered\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (nameInput === \"\") return;\r\n\r\n        const defaultDescriptionInput = (descriptionInput === \"\") ? 'No description given' : descriptionInput;\r\n        const defaultStartDateInput = (startDateInput === \"\") ? new Date().toISOString().substring(0, 10) : startDateInput;\r\n        const defaultEndDateInput = (endDateInput === \"\") ? new Date().toISOString().substring(0, 10) : endDateInput;\r\n        setDescriptionInput(defaultDescriptionInput);\r\n        setStartDateInput(defaultStartDateInput);\r\n        setEndDateInput(defaultEndDateInput);\r\n\r\n        globalFunctions.app.handleAddTodo(nameInput, defaultDescriptionInput, defaultStartDateInput, defaultEndDateInput, completedInput, editModeInput, viewStateInput);\r\n        setNameInput(\"\");\r\n        setDescriptionInput(\"\");\r\n        setStartDateInput(\"\");\r\n        setEndDateInput(\"\");\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={onSubmit} className=\"add-todo-form\">\r\n            <div className=\"controls-header\">Add a new item</div>\r\n            <div className=\"controls-wrapper\">\r\n                <div className=\"todo input\">\r\n                    <div className=\"todo-content\">\r\n                        <div>\r\n                            <input type=\"text\" placeholder=\"To do - name\" value={nameInput} onChange={(e) => { setNameInput(e.target.value) }} />\r\n                        </div>\r\n                        <div>\r\n                            <textarea type=\"textarea\" placeholder=\"Description\" value={descriptionInput} onChange={(e) => { setDescriptionInput(e.target.value) }} />\r\n                        </div>\r\n                        <div>\r\n                            <div>\r\n                                <label >From:</label>\r\n                            </div>\r\n                            <div>\r\n                                <input id=\"start-date\" type=\"date\" value={startDateInput} onChange={(e) => { setStartDateInput(e.target.value) }} />\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <div>\r\n                                <label>To:</label>\r\n                            </div>\r\n                            <div>\r\n                                <input id=\"end-date\" type=\"date\" value={endDateInput} onChange={(e) => { setEndDateInput(e.target.value) }} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <input type=\"submit\" value=\"Add todo\" className=\"btn-type-1\" />\r\n            </div>\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\nexport default AddTodoForm;","import { useState, useEffect } from 'react';\nimport './App.scss';\nimport TodoList from './components/TodoList';\nimport AddTodoForm from \"./components/AddTodoForm\";\nimport { v4 as uuidv4 } from 'uuid';\n\nconst LOCAL_STORAGE_KEY_CURRENT = 'myTodosApp.todos1.current';\nconst LOCAL_STORAGE_KEY_CLEARED = 'myTodosApp.todos1.cleared';\n\nfunction App() {\n\n  const [todos, setTodos] = useState([]);\n  const [clearedTodos, setClearedTodos] = useState([]);\n\n  const handleToggleTodo = async (id) => {\n    const newTodos = [...todos];\n    const todo = newTodos.find(todo => todo.id === id);\n    todo.completed = !todo.completed;\n    setTodos(newTodos);\n\n  }\n\n  const handleRefreshTodos = async () => {\n    let newTodos = [...todos];\n    newTodos.sort((a,b) => {\n      if (a.completed === false && b.completed === true) {\n        return -1;\n      }\n      if (a.completed === true && b.completed === false) {\n        return 1;\n      }\n      return 0;\n    });\n    setTodos(newTodos);\n  }\n\n  const handleToggleEditTodo = (id) => {\n    const newTodos = [...todos];\n    const todo = newTodos.find(todo => todo.id === id);\n    todo.editMode = !todo.editMode;\n    setTodos(newTodos);\n  }\n\n  const handleAddTodo = (nameInput, descriptionInput, startDateInput, endDateInput, completedInput, editModeInput, viewStateInput) => {\n    const newTodo = {\n      id: uuidv4(),\n      name: nameInput,\n      description: descriptionInput,\n      startDate: startDateInput,\n      endDate: endDateInput,\n      completed: completedInput,\n      editMode: editModeInput,\n      viewState: viewStateInput\n    };\n    setTodos([newTodo, ...todos]);\n  }\n\n  const handleModifyTodo = (id, newPropsObj) => {\n    let newTodos = todos.filter(todoObj => todoObj.id !== id);\n    let todoToModify = todos.find(todoObj => todoObj.id === id);\n    let todoToModifyIdx = todos.findIndex(todoObj => todoObj.id === id);\n    newPropsObj = { ...todoToModify, ...newPropsObj };\n    //newTodos = [...newTodos, newPropsObj];\n    newTodos.splice(todoToModifyIdx, 0, newPropsObj);\n    setTodos(newTodos);\n  }\n\n  const handleClearCompleted = () => {\n    if (todos.length < 1) return;\n    const clearedTodos = todos.filter(todo => {\n      return todo.completed;\n    }).map(todo => {\n      return { ...todo, ...{ viewState: false }, ...{ editMode: false } };\n    });\n    setClearedTodos(prev => {\n      return [...prev, ...clearedTodos];\n    });\n    const newTodos = todos.filter(todo => {\n      return !todo.completed;\n    });\n    setTodos(newTodos);\n  }\n\n  const handleMarkAllCompleted = () => {\n    if (todos.length < 1) return;\n    let newTodos;\n    if (todos[0].completed === true) {\n      newTodos = todos.map(todo => {\n        todo.completed = false;\n        return todo;\n      });\n    }\n    else {\n      newTodos = todos.map(todo => {\n        todo.completed = true;\n        return todo;\n      });\n    }\n    setTodos(newTodos);\n  }\n\n  const handleDeleteClearedTodos = () => {\n    if (clearedTodos.length < 1) return;\n    setClearedTodos([]);\n  }\n\n  useEffect(() => {\n    const storedTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY_CURRENT));\n    if (storedTodos) setTodos(storedTodos);\n    const storedClearedTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY_CLEARED));\n    if (storedClearedTodos) setClearedTodos(storedClearedTodos);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY_CURRENT, JSON.stringify(todos));\n  }, [todos]);\n\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY_CLEARED, JSON.stringify(clearedTodos));\n  }, [clearedTodos]);\n\n  const globalFunctions = {\n    app: {\n      handleToggleTodo: handleToggleTodo,\n      handleAddTodo: handleAddTodo,\n      handleToggleEditTodo: handleToggleEditTodo,\n      handleModifyTodo: handleModifyTodo\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"main-container\">\n        <div className=\"todos-container\">\n          <div className=\"todos-header\">\n            <span>{todos.filter(t => !t.completed).length} tasks left</span>\n            <h1 className=\"title-myTodoList\">My TodoList</h1>\n          </div>\n          <div className=\"current-todos\">\n            <TodoList globalFunctions={globalFunctions} todosArr={todos} />\n          </div>\n          <div className=\"quick-controls-container\">\n            <button onClick={handleRefreshTodos} className=\"btn-type-1\">Refresh</button>\n            <button onClick={handleMarkAllCompleted} className=\"btn-type-1\">Toggle all as completed</button>\n            <button onClick={handleClearCompleted} className=\"btn-type-1\">Clear completed todos</button>\n\n          </div>\n        </div>\n        <div className=\"side-container\">\n          <div className=\"controls-container\">\n            <AddTodoForm globalFunctions={globalFunctions} />\n          </div>\n          <div className=\"cleared-todos-container\">\n            <div className=\"cleared-todos-header\">\n              <span>Cleared Todos({clearedTodos.length})</span>\n              <button onClick={handleDeleteClearedTodos} className=\"btn-type-1\">Delete all</button>\n            </div>\n            <div className=\"cleared-todos-wrapper\">\n              <TodoList todosArr={clearedTodos} />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}