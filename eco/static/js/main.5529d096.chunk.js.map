{"version":3,"sources":["components/accessories/Burger.js","components/accessories/Header.js","components/content/Home.js","components/content/UserAccount.js","components/accessories/SideNav.js","components/accessories/ToggleButton.js","components/content/Settings.js","components/accessories/Login.js","firebase/initFirebase.js","App.js","reducers/appReducer.js","reducers/userReducer.js","reducers/allReducers.js","index.js"],"names":["Burger","burgerRef","useRef","ref","className","onClick","current","classList","toggle","sideBars","document","querySelector","window","matchMedia","matches","body","contains","style","overflow","Header","match","useRouteMatch","to","url","Home","UserAccount","useSelector","user","logout","displayName","email","SideNav","handleHideNav","burger","click","ToggleButton","theme","app","dispatch","useDispatch","sliderStyle","position","cursor","top","left","right","bottom","border","backgroundColor","WebkitTransition","transition","borderRadius","display","width","height","opacity","type","checked","onChange","Settings","Login","firebase","firebaseAuthUiConfig","signInFlow","signInOptions","provider","auth","EmailAuthProvider","PROVIDER_ID","requireDisplayName","GoogleAuthProvider","signInSuccessUrl","callbacks","signInSuccessWithAuthResult","uiConfig","firebaseAuth","config","apiKey","process","authDomain","projectId","apps","length","initializeApp","App","useEffect","payload","signOut","cancelAuthListener","onIdTokenChanged","u","storedTheme","localStorage","getItem","exact","path","component","render","loading","themeOption","handleSetTheme","state","action","newState","setItem","handleSwitchTheme","handleSetFirebaseLogoutFunction","handleSetUser","handleSetLoading","allReducers","combineReducers","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5529d096.chunk.js","sourcesContent":["import { useRef } from \"react\";\r\n\r\nconst Burger = () => {\r\n    const burgerRef = useRef();\r\n\r\n    const handleToggle = () => {\r\n        burgerRef.current.classList.toggle(\"active\");\r\n        const sideBars = document.querySelector(\".side\");\r\n        sideBars?.classList.toggle(\"active\");\r\n\r\n\r\n        // stop body from scrolling on second breakpoint(i.e. mobile and tablet devices)\r\n        if (window.matchMedia(\"(max-width: 1024px)\").matches) {\r\n            const body = document.querySelector(\"body\");\r\n            if (sideBars?.classList.contains(\"active\")) {\r\n                body.style.overflow = \"hidden\";\r\n            } else {\r\n                body.style.overflow = \"\";\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div ref={burgerRef} className=\"burger\" onClick={handleToggle}>\r\n            <div className=\"line line1\"></div>\r\n            <div className=\"line line2\"></div>\r\n            <div className=\"line line3\"></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Burger;\r\n","import Burger from \"./Burger\";\r\nimport { Link, useRouteMatch } from \"react-router-dom\";\r\nimport { RiAccountPinCircleLine } from \"react-icons/ri\";\r\nimport { BiGlobeAlt } from \"react-icons/bi\";\r\n\r\nconst Header = () => {\r\n    let match = useRouteMatch();\r\n\r\n    return (\r\n        <header className=\"main-header\">\r\n            <nav className=\"main-nav\">\r\n                <ul className=\"main-nav-list\">\r\n                    <li>\r\n                        <Burger />\r\n                    </li>\r\n                    <li>\r\n                        <Link to={`${match.url}eco/home`} className=\"btn-type-1-ignore\">\r\n                            <BiGlobeAlt />\r\n                            <span className=\"app-name\">ECO</span>\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to={`${match.url}eco/user-account`} className=\"btn-type-1\">\r\n                            <RiAccountPinCircleLine />\r\n                            <span className=\"medium-type large-type\">\r\n                                Profile\r\n                            </span>\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div>\r\n            <header>\r\n                <h2>Home</h2>\r\n            </header>\r\n            <article>\r\n                <p>\r\n                    Lorem ipsum dolor sit, amet consectetur adipisicing elit.\r\n                    Culpa, provident facere doloribus magnam eum aliquam.\r\n                </p>\r\n            </article>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst UserAccount = () => {\r\n    const { logout, user } = useSelector(({ user }) => {\r\n        return user;\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <header>\r\n                <h2>User account</h2>\r\n                <div className=\"logout-container\">\r\n                    <button className=\"btn-type-3 logout-btn\" onClick={logout}>\r\n                        Logout\r\n                    </button>\r\n                    <span>{user.displayName ? user.displayName : user?.email }</span> \r\n                </div>\r\n            </header>\r\n            <section>\r\n                Lorem ipsum, dolor sit amet consectetur adipisicing elit.\r\n                Tempora a hic libero possimus sint. Facere laboriosam, adipisci\r\n                blanditiis, quas, maxime corrupti fuga doloribus accusantium\r\n                officiis totam neque velit voluptatibus corporis?\r\n            </section>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserAccount;\r\n","import React from \"react\";\r\nimport { Link, useRouteMatch } from \"react-router-dom\";\r\nimport { RiHome3Line } from \"react-icons/ri\";\r\nimport { RiSettings3Line } from \"react-icons/ri\";\r\nimport { RiAccountPinCircleLine } from \"react-icons/ri\";\r\n\r\nconst SideNav = () => {\r\n    let match = useRouteMatch();\r\n\r\n    const handleHideNav = () => {\r\n        // hides the side nav on mobile, when a user clicks a link\r\n        if (window.matchMedia(\"(max-width: 1024px)\").matches)\r\n        {\r\n            const burger = document.querySelector('.burger');\r\n            if (burger?.classList.contains(\"active\")) { burger?.click(); }\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <aside className=\"side\">\r\n            <nav className=\"side-nav\">\r\n                <ul className=\"side-nav-list\">\r\n                    <li className=\"item-container\">\r\n                        <Link to={`${match.url}eco/home`} onClick={handleHideNav} className=\"item btn-type-2\">\r\n                            <RiHome3Line />\r\n                            <span>Home</span>\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"item-container\">\r\n                        <Link to={`${match.url}eco/user-account`} onClick={handleHideNav} className=\"item btn-type-2\">\r\n                            <RiAccountPinCircleLine />\r\n                            <span>\r\n                                Profile\r\n                            </span>\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"item-container\">\r\n                        <Link to={`${match.url}eco/settings`} onClick={handleHideNav} className=\"item btn-type-2\">\r\n                            <RiSettings3Line />\r\n                            <span>Settings</span>\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        </aside>\r\n    );\r\n};\r\n\r\nexport default SideNav;\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\n\r\nconst ToggleButton = () => {\r\n\r\n    const { theme  } = useSelector(({ app }) => {\r\n        return app;\r\n    });\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const switchStyle = {\r\n        position: \"relative\",\r\n        display: \"inline-block\",\r\n        width: \"40px\",\r\n        height: \"20px\",\r\n    };\r\n\r\n    const inputStyle = {\r\n        opacity: \"0\",\r\n        width: \"0\",\r\n        height: \"0\",\r\n    };\r\n\r\n    const sliderStyle = {\r\n        position: \"absolute\",\r\n        cursor: \"pointer\",\r\n        top: \"0\",\r\n        left: \"0\",\r\n        right: \"0\",\r\n        bottom: \"0\",\r\n        border: \"1px solid var(--primary-clr-3)\",\r\n        backgroundColor: \"var(--clr-blue-8)\",\r\n        WebkitTransition: \".4s\",\r\n        transition: \".4s\",\r\n        borderRadius: \"25%\",\r\n    };\r\n\r\n    if (theme === \"App--light\") {\r\n        sliderStyle.backgroundColor = \"#ccc\";\r\n    }\r\n\r\n    const handleChangeTheme = () => {\r\n        dispatch({type: \"SWITCH_THEME\"});\r\n    }\r\n\r\n    return (\r\n        <label className=\"switch\" style={switchStyle}>\r\n            <input\r\n                style={inputStyle}\r\n                type=\"checkbox\"\r\n                checked={theme === \"App--light\" ? true : false}\r\n                onChange={handleChangeTheme}\r\n            />\r\n            <span style={sliderStyle} className=\"slider\"></span>\r\n        </label>\r\n    );\r\n};\r\n\r\nexport default ToggleButton;\r\n","import React from \"react\";\r\nimport ToggleButton from \"../accessories/ToggleButton\";\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>\r\n            <header>\r\n                <h2>Settings</h2>\r\n            </header>\r\n            <section className=\"change-theme-container\">\r\n                <span>Theme Settings:</span>\r\n                <span className=\"change-theme-wrapper\">\r\n                    <span>Default</span>\r\n                    <ToggleButton />\r\n                    <span>Light</span>\r\n                </span>\r\n            </section>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Settings;\r\n","import StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\r\n\r\nconst Login = ({ firebase }) => {\r\n    const firebaseAuthUiConfig = {\r\n        signInFlow: \"popup\",\r\n        signInOptions: [\r\n            { provider: firebase.auth.EmailAuthProvider.PROVIDER_ID, requireDisplayName: false },\r\n            { provider: firebase.auth.GoogleAuthProvider.PROVIDER_ID },\r\n        ],\r\n        signInSuccessUrl: \"/eco/\",\r\n        callbacks: {\r\n            // Avoid redirects after sign-in.\r\n            signInSuccessWithAuthResult: () => false,\r\n        },\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"signin-or-register-text\">\r\n                <h1>Sign in/Register</h1>\r\n            </div>\r\n            <StyledFirebaseAuth\r\n                uiConfig={firebaseAuthUiConfig}\r\n                firebaseAuth={firebase.auth()}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n//import 'firebase/database';\r\n\r\nconst config = {\r\n    apiKey: process.env.REACT_APP_FIREBASE_PROJECT_API_KEY,\r\n    authDomain: `${process.env.REACT_APP_FIREBASE_PROJECT_ID}.firebaseapp.com`,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID\r\n}\r\n\r\nconst initFirebase = () => {\r\n    if (!firebase.apps.length)\r\n    {\r\n        firebase.initializeApp(config);\r\n    }\r\n}\r\n\r\ninitFirebase();\r\n\r\nexport { firebase };","import { useEffect } from \"react\";\nimport \"./styles/App.scss\";\n\nimport { Switch, Route, useRouteMatch, Redirect } from \"react-router-dom\";\n\nimport Header from \"./components/accessories/Header\";\nimport Home from \"./components/content/Home\";\nimport UserAccount from \"./components/content/UserAccount\";\nimport SideNav from \"./components/accessories/SideNav\";\nimport Settings from \"./components/content/Settings\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Login from \"./components/accessories/Login\";\n\nimport { firebase } from \"./firebase/initFirebase\";\n\nimport { VscLoading } from \"react-icons/vsc\";\n\nconst themeOptionKey = \"THEME_OPTION\";\n\nfunction App() {\n    let match = useRouteMatch();\n\n    const { app, user } = useSelector(({ app, user }) => {\n        return { app, user };\n    });\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        // set logout funtion for firebase, in redux\n        // assuming we have a firebase component imported\n        dispatch({\n            type: \"SET_FIREBASE_LOGOUT_FUNCTION\",\n            payload: () => firebase.auth().signOut(),\n        });\n\n        const cancelAuthListener = firebase.auth().onIdTokenChanged((u) => {\n            dispatch({ type: \"SET_USER\", payload: u });\n            dispatch({ type: \"SET_LOADING\", payload: false });\n        });\n        \n        // stop listening on unmount\n        return () => cancelAuthListener();\n    }, [dispatch]);\n\n    useEffect(() => {\n        const storedTheme = localStorage.getItem(themeOptionKey);\n        if (storedTheme) {\n            dispatch({ type: \"SET_THEME\", payload: storedTheme });\n        } else {\n            dispatch({ type: \"SET_THEME\", payload: \"none\" });\n        }\n    }, [dispatch]);\n\n    return (\n        <div\n            className={`App ${app.theme === \"App--light\" ? \"App--light\" : \"\"}`}\n        >\n            <Header />\n            <div className=\"page\">\n                <SideNav />\n                <main className=\"main-content\">\n                    {!user.user ? user.loading ? (<VscLoading className=\"loading-svg\" />) : (\n                        <Login firebase={firebase} />\n                    ) : (\n                        <Switch>\n                            <Route\n                                exact\n                                path={`${match.path}(eco)?/(home)`}\n                                component={Home}\n                            />\n                            <Route\n                                exact\n                                path={`${match.path}(eco)?/(home)`}\n                                component={Home}\n                            />\n                            <Route\n                                exact\n                                path={`${match.path}(eco)?/user-account`}\n                                component={UserAccount}\n                            />\n                            <Route\n                                exact\n                                path={`${match.path}(eco)?/settings`}\n                                component={Settings}\n                            />\n                            <Route\n                                path=\"\"\n                                render={() => (\n                                    <Redirect to={`${match.url}eco/home`} />\n                                )}\n                            />\n                        </Switch>\n                    )}\n                </main>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","const themeOption = \"THEME_OPTION\";\r\n\r\nconst handleSetTheme = (state, action) => {\r\n    let newState = { ...state };\r\n    newState.theme = action.payload;\r\n    localStorage.setItem( themeOption , action.payload);\r\n    return newState;\r\n};\r\n\r\nconst handleSwitchTheme = (state) => {\r\n    let newState = { ...state };\r\n    if (newState.theme === \"App--light\") {\r\n        newState.theme = \"none\";\r\n    } else {\r\n        newState.theme = \"App--light\";\r\n    }\r\n    localStorage.setItem( themeOption, newState.theme);\r\n    return newState;\r\n};\r\n\r\nexport const appReducer = (state = { theme: \"none\" }, action) => {\r\n    switch (action.type) {\r\n        case \"SET_THEME\":\r\n            return handleSetTheme(state, action);\r\n        case \"SWITCH_THEME\":\r\n            return handleSwitchTheme(state);\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","const handleSetFirebaseLogoutFunction = (state, action) => {\r\n    let newState = { ...state };\r\n    newState.logout = action.payload;\r\n    return newState;\r\n};\r\n\r\nconst handleSetUser = (state, action) => {\r\n    let newState = { ...state };\r\n    newState.user = action.payload;\r\n    return newState;\r\n};\r\n\r\nconst handleSetLoading = (state, action) => {\r\n    let newState = { ...state };\r\n    newState.loading = action.payload;\r\n    return newState;\r\n};\r\n\r\nexport const userReducer = (\r\n    state = { user: null, loading: true, logout: () => {} },\r\n    action\r\n) => {\r\n    switch (action.type) {\r\n        case \"SET_FIREBASE_LOGOUT_FUNCTION\":\r\n            return handleSetFirebaseLogoutFunction(state, action);\r\n        case \"SET_USER\":\r\n            return handleSetUser(state, action);\r\n        case \"SET_LOADING\":\r\n            return handleSetLoading(state, action);\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { appReducer } from \"./appReducer\";\r\nimport { userReducer } from \"./userReducer\";\r\n\r\nconst allReducers = combineReducers({\r\n    app: appReducer,\r\n    user: userReducer\r\n});\r\n\r\nexport default allReducers;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { createStore } from \"redux\";\nimport allReducers from \"./reducers/allReducers\";\nimport { Provider as ProviderRedux } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nconst store = createStore(\n    allReducers /**/,\n    window.__REDUX_DEVTOOLS_EXTENSION__ &&\n        window.__REDUX_DEVTOOLS_EXTENSION__() /**/\n);\n\nReactDOM.render(\n    <React.StrictMode>\n        <ProviderRedux store={store}>\n            <Router>\n                <App />\n            </Router>\n        </ProviderRedux>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}