{"version":3,"sources":["components/accessories/Burger.js","components/accessories/Header.js","components/content/Home.js","components/content/UserAccount.js","components/accessories/SideNav.js","components/accessories/ToggleButton.js","components/content/Settings.js","App.js","reducers/appReducer.js","reducers/allReducers.js","index.js"],"names":["Burger","burgerRef","useRef","ref","className","onClick","current","classList","toggle","sideBars","document","querySelector","window","matchMedia","matches","body","contains","style","overflow","Header","match","useRouteMatch","to","url","Home","UserAccount","SideNav","handleHideNav","burger","click","ToggleButton","theme","useSelector","app","dispatch","useDispatch","sliderStyle","position","cursor","top","left","right","bottom","border","backgroundColor","WebkitTransition","transition","borderRadius","display","width","height","opacity","type","checked","onChange","Settings","App","useEffect","storedTheme","localStorage","getItem","payload","exact","path","component","themeOption","handleSetTheme","state","action","newState","setItem","handleSwitchTheme","allReducers","combineReducers","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0e4107b9.chunk.js","sourcesContent":["import { useRef } from \"react\";\r\n\r\nconst Burger = () => {\r\n    const burgerRef = useRef();\r\n\r\n    const handleToggle = () => {\r\n        burgerRef.current.classList.toggle(\"active\");\r\n        const sideBars = document.querySelector(\".side\");\r\n        sideBars?.classList.toggle(\"active\");\r\n\r\n\r\n        // stop body from scrolling on second breakpoint(i.e. mobile and tablet devices)\r\n        if (window.matchMedia(\"(max-width: 1024px)\").matches) {\r\n            const body = document.querySelector(\"body\");\r\n            if (sideBars?.classList.contains(\"active\")) {\r\n                body.style.overflow = \"hidden\";\r\n            } else {\r\n                body.style.overflow = \"\";\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div ref={burgerRef} className=\"burger\" onClick={handleToggle}>\r\n            <div className=\"line line1\"></div>\r\n            <div className=\"line line2\"></div>\r\n            <div className=\"line line3\"></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Burger;\r\n","import Burger from \"./Burger\";\r\nimport { Link, useRouteMatch } from \"react-router-dom\";\r\nimport { RiAccountPinCircleLine } from \"react-icons/ri\";\r\nimport { BiGlobeAlt } from \"react-icons/bi\";\r\n\r\nconst Header = () => {\r\n    let match = useRouteMatch();\r\n\r\n    return (\r\n        <header className=\"main-header\">\r\n            <nav className=\"main-nav\">\r\n                <ul className=\"main-nav-list\">\r\n                    <li>\r\n                        <Burger />\r\n                    </li>\r\n                    <li>\r\n                        <Link to={`${match.url}eco`} className=\"btn-type-1-ignore\">\r\n                            <BiGlobeAlt />\r\n                            <span className=\"app-name\">ECO</span>\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to={`${match.url}eco/user-account`} className=\"btn-type-1\">\r\n                            <RiAccountPinCircleLine />\r\n                            <span className=\"medium-type large-type\">\r\n                                Profile\r\n                            </span>\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div>\r\n            <header>\r\n                <h2>Home</h2>\r\n            </header>\r\n            <article>\r\n                <p>\r\n                    Lorem ipsum dolor sit, amet consectetur adipisicing elit.\r\n                    Culpa, provident facere doloribus magnam eum aliquam.\r\n                </p>\r\n            </article>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nconst UserAccount = () => {\r\n    return (\r\n        <div>\r\n            <header>\r\n                <h2>User account</h2> \r\n                <button className=\"btn-type-3 logout-btn\">Logout</button>\r\n            </header>\r\n            <article>\r\n                Lorem ipsum, dolor sit amet consectetur adipisicing elit.\r\n                Tempora a hic libero possimus sint. Facere laboriosam, adipisci\r\n                blanditiis, quas, maxime corrupti fuga doloribus accusantium\r\n                officiis totam neque velit voluptatibus corporis?\r\n            </article>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserAccount;\r\n","import React from \"react\";\r\nimport { Link, useRouteMatch } from \"react-router-dom\";\r\nimport { RiHome3Line } from \"react-icons/ri\";\r\nimport { RiSettings3Line } from \"react-icons/ri\";\r\nimport { RiAccountPinCircleLine } from \"react-icons/ri\";\r\n\r\nconst SideNav = () => {\r\n    let match = useRouteMatch();\r\n\r\n    const handleHideNav = () => {\r\n        // hides the side nav on mobile, when a user clicks a link\r\n        if (window.matchMedia(\"(max-width: 1024px)\").matches)\r\n        {\r\n            const burger = document.querySelector('.burger');\r\n            if (burger?.classList.contains(\"active\")) { burger?.click(); }\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <aside className=\"side\">\r\n            <nav className=\"side-nav\">\r\n                <ul className=\"side-nav-list\">\r\n                    <li className=\"item-container\">\r\n                        <Link to={`${match.url}eco`} onClick={handleHideNav} className=\"item btn-type-2\">\r\n                            <RiHome3Line />\r\n                            <span>Home</span>\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"item-container\">\r\n                        <Link to={`${match.url}eco/user-account`} onClick={handleHideNav} className=\"item btn-type-2\">\r\n                            <RiAccountPinCircleLine />\r\n                            <span>\r\n                                Profile\r\n                            </span>\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"item-container\">\r\n                        <Link to={`${match.url}eco/settings`} onClick={handleHideNav} className=\"item btn-type-2\">\r\n                            <RiSettings3Line />\r\n                            <span>Settings</span>\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        </aside>\r\n    );\r\n};\r\n\r\nexport default SideNav;\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\n\r\nconst ToggleButton = () => {\r\n\r\n    const { theme  } = useSelector(({ app }) => {\r\n        return app;\r\n    });\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const switchStyle = {\r\n        position: \"relative\",\r\n        display: \"inline-block\",\r\n        width: \"40px\",\r\n        height: \"20px\",\r\n    };\r\n\r\n    const inputStyle = {\r\n        opacity: \"0\",\r\n        width: \"0\",\r\n        height: \"0\",\r\n    };\r\n\r\n    const sliderStyle = {\r\n        position: \"absolute\",\r\n        cursor: \"pointer\",\r\n        top: \"0\",\r\n        left: \"0\",\r\n        right: \"0\",\r\n        bottom: \"0\",\r\n        border: \"1px solid var(--primary-clr-3)\",\r\n        backgroundColor: \"var(--clr-blue-8)\",\r\n        WebkitTransition: \".4s\",\r\n        transition: \".4s\",\r\n        borderRadius: \"25%\",\r\n    };\r\n\r\n    if (theme === \"App--light\") {\r\n        sliderStyle.backgroundColor = \"#ccc\";\r\n    }\r\n\r\n    const handleChangeTheme = () => {\r\n        dispatch({type: \"SWITCH_THEME\"});\r\n    }\r\n\r\n    return (\r\n        <label className=\"switch\" style={switchStyle}>\r\n            <input\r\n                style={inputStyle}\r\n                type=\"checkbox\"\r\n                checked={theme === \"App--light\" ? true : false}\r\n                onChange={handleChangeTheme}\r\n            />\r\n            <span style={sliderStyle} className=\"slider\"></span>\r\n        </label>\r\n    );\r\n};\r\n\r\nexport default ToggleButton;\r\n","import React from \"react\";\r\nimport ToggleButton from \"../accessories/ToggleButton\";\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>\r\n            <header>\r\n                <h2>Settings</h2>\r\n            </header>\r\n            <section className=\"change-theme-container\">\r\n                <span>Theme Settings:</span>\r\n                <span className=\"change-theme-wrapper\">\r\n                    <span>Default</span>\r\n                    <ToggleButton />\r\n                    <span>Light</span>\r\n                </span>\r\n            </section>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Settings;\r\n","import { useEffect } from \"react\";\nimport \"./styles/App.scss\";\n\nimport {\n    Switch,\n    Route,\n    useRouteMatch,\n} from \"react-router-dom\";\n\nimport Header from \"./components/accessories/Header\";\nimport Home from \"./components/content/Home\";\nimport UserAccount from \"./components/content/UserAccount\";\nimport SideNav from \"./components/accessories/SideNav\";\nimport Settings from \"./components/content/Settings\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\n\nconst themeOption = \"THEME_OPTION\";\n\nfunction App() {\n    let match = useRouteMatch();\n\n    const { theme } = useSelector(({ app }) => {\n        return app;\n    });\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        const storedTheme = localStorage.getItem(themeOption);\n        if (storedTheme) {\n            dispatch({ type: \"SET_THEME\", payload: storedTheme });\n        } else {\n            dispatch({ type: \"SET_THEME\", payload: \"none\" });\n        }\n    }, [dispatch]);\n\n    return (\n        <div className={`App ${theme === \"App--light\" ? \"App--light\" : \"\"}`}>\n            <Header />\n            <div className=\"page\">\n                <SideNav />\n                <main className=\"main-content\">\n                    <Switch>\n                        <Route exact path={`${match.path}(eco)?`} component={Home} />\n                        <Route\n                            exact\n                            path={`${match.path}(eco)?/user-account`}\n                            component={UserAccount}\n                        />\n                        <Route\n                            exact\n                            path={`${match.path}(eco)?/settings`}\n                            component={Settings}\n                        />\n                    </Switch>\n                </main>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","const themeOption = \"THEME_OPTION\";\r\n\r\nconst handleSetTheme = (state, action) => {\r\n    let newState = { ...state };\r\n    newState.theme = action.payload;\r\n    localStorage.setItem( themeOption , action.payload);\r\n    return newState;\r\n};\r\n\r\nconst handleSwitchTheme = (state) => {\r\n    let newState = { ...state };\r\n    if (newState.theme === \"App--light\") {\r\n        newState.theme = \"none\";\r\n    } else {\r\n        newState.theme = \"App--light\";\r\n    }\r\n    localStorage.setItem( themeOption, newState.theme);\r\n    return newState;\r\n};\r\n\r\nexport const appReducer = (state = { theme: \"none\" }, action) => {\r\n    switch (action.type) {\r\n        case \"SET_THEME\":\r\n            return handleSetTheme(state, action);\r\n        case \"SWITCH_THEME\":\r\n            return handleSwitchTheme(state);\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { appReducer } from \"./appReducer\";\r\n\r\nconst allReducers = combineReducers({\r\n    app: appReducer\r\n});\r\n\r\nexport default allReducers;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { createStore } from \"redux\";\nimport allReducers from \"./reducers/allReducers\";\nimport { Provider as ProviderRedux } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nconst store = createStore(\n    allReducers /**/,\n    window.__REDUX_DEVTOOLS_EXTENSION__ &&\n        window.__REDUX_DEVTOOLS_EXTENSION__() /**/\n);\n\nReactDOM.render(\n    <React.StrictMode>\n        <ProviderRedux store={store}>\n            <Router>\n                <App />\n            </Router>\n        </ProviderRedux>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}